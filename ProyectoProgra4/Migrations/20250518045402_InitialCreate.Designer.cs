// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoProgra4.ProjectDataBase;

#nullable disable

namespace ProyectoProgra4.Migrations
{
    [DbContext(typeof(ProjectDataBaseContext))]
    [Migration("20250518045402_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ProyectoProgra4.Entities.CandidateSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<int>("IdSkill")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("IdSkill");

                    b.ToTable("CandidateSkills");
                });

            modelBuilder.Entity("ProyectoProgra4.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WebSite")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("ProyectoProgra4.Entities.OfferSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdOffer")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdOffer");

                    b.HasIndex("SkillId");

                    b.ToTable("OfferSkills");
                });

            modelBuilder.Entity("ProyectoProgra4.Entities.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("Proyecto_Final_PrograIV.Entities.Candidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstLastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SecondLastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("Proyecto_Final_PrograIV.Entities.CandidateOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<int>("IdOffer")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("IdOffer");

                    b.ToTable("CandidateOffers");
                });

            modelBuilder.Entity("Proyecto_Final_PrograIV.Entities.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdCompany")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdCompany");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("ProyectoProgra4.Entities.CandidateSkill", b =>
                {
                    b.HasOne("Proyecto_Final_PrograIV.Entities.Candidate", "Candidate")
                        .WithMany("CandidateSkills")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoProgra4.Entities.Skill", "Skill")
                        .WithMany("CandidateSkills")
                        .HasForeignKey("IdSkill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("ProyectoProgra4.Entities.OfferSkill", b =>
                {
                    b.HasOne("Proyecto_Final_PrograIV.Entities.Offer", "Offer")
                        .WithMany("OfferSkills")
                        .HasForeignKey("IdOffer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoProgra4.Entities.Skill", "Skill")
                        .WithMany("OfferSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Offer");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("Proyecto_Final_PrograIV.Entities.CandidateOffer", b =>
                {
                    b.HasOne("Proyecto_Final_PrograIV.Entities.Candidate", "Candidate")
                        .WithMany("CandidateOffers")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto_Final_PrograIV.Entities.Offer", "Offer")
                        .WithMany("CandidateOffers")
                        .HasForeignKey("IdOffer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("Proyecto_Final_PrograIV.Entities.Offer", b =>
                {
                    b.HasOne("ProyectoProgra4.Entities.Company", "Company")
                        .WithMany("Offers")
                        .HasForeignKey("IdCompany")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ProyectoProgra4.Entities.Company", b =>
                {
                    b.Navigation("Offers");
                });

            modelBuilder.Entity("ProyectoProgra4.Entities.Skill", b =>
                {
                    b.Navigation("CandidateSkills");

                    b.Navigation("OfferSkills");
                });

            modelBuilder.Entity("Proyecto_Final_PrograIV.Entities.Candidate", b =>
                {
                    b.Navigation("CandidateOffers");

                    b.Navigation("CandidateSkills");
                });

            modelBuilder.Entity("Proyecto_Final_PrograIV.Entities.Offer", b =>
                {
                    b.Navigation("CandidateOffers");

                    b.Navigation("OfferSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
